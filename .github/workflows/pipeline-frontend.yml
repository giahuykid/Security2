name: CI/CD front end

on:
  push:
    branches:
      - main

jobs:
  build-image:
    name: Build FE Docker image
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract project version
        id: extract_version
        run: |
          cd login_register
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: login_register
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend,${{ secrets.DOCKER_USERNAME }}/frontend:${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Deploy Frontend
    runs-on: self-hosted
    needs: [ build-image ]
    steps:
      - name: Create SSH Key File
        run: |
            echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/aws_key
            chmod 600 ~/.ssh/aws_key

      - name: Create deployment folder
        run: ssh -i ${{secrets.AWS_SSH_KEY}} ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh -oStrictHostKeyChecking=no -i ${{secrets.AWS_SSH_KEY}} ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_IP }} <<EOF
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF
