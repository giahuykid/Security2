name: ci/cd backend

on:
  push:
    branches:
      - main

jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd SrpingSecurity3
          ./mvnw clean compile
  unit-tests:
    runs-on: self-hosted
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd SrpingSecurity3
          ./mvnw clean test
  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Compile project
        run: |
          cd SrpingSecurity3
          ./mvnw clean compile

  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Extract project version
        id: extract_version
        run: |
          cd SrpingSecurity3
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ DOCKER_USERNAME}}
          password: ${{ DOCKER_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: book-network
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ DOCKER_USERNAME }}/backend:${{ steps.extract_version.outputs.VERSION }},${{ DOCKER_USERNAME }}/backend
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
  

  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    steps:

      - name: Create deployment folder
        run: ssh -i ${{AWS_SSH_KEY}} ${{ AWS_USERNAME }}@${{ AWS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -oStrictHostKeyChecking=no docker-compose.yml ${{ AWS_USERNAME }}@${{ AWS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          
          ssh -i ${{AWS_SSH_KEY}} ${{ AWS_USERNAME }}@${{ AWS_IP }} <<EOF
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF
